%DATA
int: N = 8;
int: M = 5;
%я предполагаю, что граф неориентированный, т.к.это не явно не указано. Про простоту циклов в условии ничего не сказано, но это тоже, видимо, надо предполагать. Иначе в граф нельзя поместить ни одного реба -- будет 4-цикл a-b-a-b-a.
%ответ разнится в зависимости от того, разрешаем ли мы "петли" -- ребра из вершины в саму себя. В завимости от этого разрешения нужно изменить одну строчку (см.код)
array[1..N, 1..N] of var 0..1 : edges; %edges[i,j] = 1 <=> вершины i и j соединены ребром
%OBJECTIVE -- максимизировать число рёбер
solve maximize sum(i in 1..N)(edges[i,i]) + sum(i,j in 1..N where i!=j)(edges[i,j]) / 2; %т.к.все рёбра посчитаем дважды, а держать треугольную матрицу не хочу
%CONSTRAINTS
constraint forall(i,j in 1..N)(edges[i,j]=edges[j,i]); %матрица смежности симметрична
constraint forall(i,j,k,l in 1..N where i!=j /\ i!=k /\ i!=l /\ j!=k /\ j!=l /\ k!=l)(edges[i,j]+edges[j,k]+edges[k,l]+edges[l,i] < 4); %запрещаем простые 4-циклы
constraint forall(i in 1..N)(edges[i,i]=0); %эту строчку нужно закомменить, если хотим графы с петлями
%ОТВЕТЫ 
%N=7: без петель -- 9, с ними -- 16
%N=8 без петель 11, с ними 19